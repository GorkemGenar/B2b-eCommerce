@model B2b_eCommerce.Models.IdentityViewModels.Register
@{
    ViewBag.Title = "Register";
}
<div class="container mt-5">
    @Html.ValidationSummary()

    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" style="background:rgba(0,0,0,.03)">
            <span class="nav-link active" style="color: #000000; background-color:#ffffff; "><b>Register</b></span>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="row mt-2">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Username:</label>
                            @Html.TextBoxFor(i => i.Username, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Username, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Email Address:</label>
                            @Html.TextBoxFor(i => i.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Password:</label>
                            @Html.PasswordFor(i => i.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Re-Password:</label>
                            @Html.PasswordFor(i => i.RePassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.RePassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Company Name:</label>
                            @Html.TextBoxFor(i => i.CompanyName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.CompanyName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Company Type:</label>
                            @Html.TextBoxFor(i => i.CompanyType, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.CompanyType, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Sector:</label>
                            @Html.TextBoxFor(i => i.Sector, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Sector, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Year of Establishment:</label>
                            @Html.TextBoxFor(i => i.YearofEstablishment, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.YearofEstablishment, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Website:</label>
                            @Html.TextBoxFor(i => i.Website, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Website, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Country:</label>
                            @Html.TextBoxFor(i => i.Country, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Country, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Address:</label>
                            @Html.TextAreaFor(i => i.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Phone:</label>
                            @Html.TextBoxFor(i => i.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Certifications:</label>
                            @Html.TextBoxFor(i => i.Certifications, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.Certifications, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Turn Over:</label>
                            @Html.TextBoxFor(i => i.TurnOver, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.TurnOver, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Number of Employees:</label>
                            @Html.TextBoxFor(i => i.NumberofEmployees, new { @class = "form-control" })
                            @Html.ValidationMessageFor(i => i.NumberofEmployees, "", new { @class = "text-danger" })
                        </div>

                        <button type="submit" class="btn btn-outline-primary float-right">Create a New Supplier</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



